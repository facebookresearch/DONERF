[Data]
depthTransform = log

[Features]
inFeatures = [RayMarchFromPoses, RayMarchFromCoarse]
outFeatures = [RGBARayMarch, RGBARayMarch]
posEnc = [nerf, nerf]
posEncArgs = [10-4, 10-4]

[Network]
activation = [relu, relu]
layers = [8, 8]
layerWidth = [256, 256]
skips = [auto, auto]

[Training]
epochs = 300001
scale = 2
samples = 1024
batchImages = 1
lrate = 5e-4
losses = [MSE, MSE]
lossWeights = [1.0, 1.0]
inferenceChunkSize = 4096
epochsRender = 10000
performEvaluation = True

[Raymarching-Params]
numRaymarchSamples = [64, 128]
; second sampler doesn't matter here, as the RayMarchFromCoarse feature does the importance sampling
rayMarchSampler = [LinearlySpacedZNearZFar, LinearlySpacedZNearZFar]
zNear = [0.001, 0.001]
zFar = [1, 1]
; ray march sampling step size (currently 1.0 / 128)
rayMarchSamplingStep = [0.0078125, 0.0078125]
rayMarchNormalization = [InverseSqrtDistCentered, InverseSqrtDistCentered]

